"use client"

import type React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Plus, BookOpen, Link, FileText, Save, Globe, Tag } from "lucide-react"

interface BookType {
  id: string
  title: string
  url?: string
  content?: string
  description: string
  type: "url" | "text"
  category: string
  language: string
}

interface AddBookFormProps {
  onAddBook: (book: BookType) => void
}

const bookCategories = [
  "‡∏ô‡∏¥‡∏ó‡∏≤‡∏ô",
  "‡∏ß‡∏£‡∏£‡∏ì‡∏Å‡∏£‡∏£‡∏°",
  "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
  "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
  "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ",
  "‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
  "‡∏Ç‡πà‡∏≤‡∏ß",
  "‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°",
  "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô",
  "‡∏ö‡∏ó‡∏Å‡∏ß‡∏µ",
  "‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠",
  "‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
]

const languages = [
  { code: "th", name: "‡πÑ‡∏ó‡∏¢", flag: "üáπüá≠" },
  { code: "en", name: "English", flag: "üá∫üá∏" },
  { code: "zh", name: "‰∏≠Êñá", flag: "üá®üá≥" },
  { code: "ja", name: "Êó•Êú¨Ë™û", flag: "üáØüáµ" },
  { code: "ko", name: "ÌïúÍµ≠Ïñ¥", flag: "üá∞üá∑" },
]

export default function AddBookForm({ onAddBook }: AddBookFormProps) {
  const [activeTab, setActiveTab] = useState("url")
  const [urlFormData, setUrlFormData] = useState({
    title: "",
    url: "",
    description: "",
    category: "",
    language: "th",
  })

  const [textFormData, setTextFormData] = useState({
    title: "",
    content: "",
    description: "",
    category: "",
    language: "th",
  })

  const [isSubmitting, setIsSubmitting] = useState(false)

  const handleUrlSubmit = async (e: React.FormEvent) => {
    e.preventDefault()

    if (!urlFormData.title.trim() || !urlFormData.url.trim() || !urlFormData.category || !urlFormData.language) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")
      return
    }

    // Validate URL
    try {
      new URL(urlFormData.url)
    } catch {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà URL ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
      return
    }

    setIsSubmitting(true)

    try {
      const newBook: BookType = {
        id: `custom_${Date.now()}`,
        title: urlFormData.title.trim(),
        url: urlFormData.url.trim(),
        description: urlFormData.description.trim() || "‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå",
        type: "url",
        category: urlFormData.category,
        language: urlFormData.language,
      }

      onAddBook(newBook)

      // Reset form
      setUrlFormData({
        title: "",
        url: "",
        description: "",
        category: "",
        language: "th",
      })

      alert("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
    } catch (error) {
      console.error("Error adding book:", error)
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    } finally {
      setIsSubmitting(false)
    }
  }

  const handleTextSubmit = async (e: React.FormEvent) => {
    e.preventDefault()

    if (
      !textFormData.title.trim() ||
      !textFormData.content.trim() ||
      !textFormData.category ||
      !textFormData.language
    ) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")
      return
    }

    setIsSubmitting(true)

    try {
      const newBook: BookType = {
        id: `custom_${Date.now()}`,
        title: textFormData.title.trim(),
        content: textFormData.content.trim(),
        description: textFormData.description.trim() || "‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°",
        type: "text",
        category: textFormData.category,
        language: textFormData.language,
      }

      onAddBook(newBook)

      // Reset form
      setTextFormData({
        title: "",
        content: "",
        description: "",
        category: "",
        language: "th",
      })

      alert("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
    } catch (error) {
      console.error("Error creating book:", error)
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    } finally {
      setIsSubmitting(false)
    }
  }

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Plus className="h-5 w-5 text-blue-600" />
            ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
          </CardTitle>
          <CardDescription>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏©‡∏≤</CardDescription>
        </CardHeader>
        <CardContent>
          <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="url" className="flex items-center gap-2">
                <Globe className="h-4 w-4" />
                ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
              </TabsTrigger>
              <TabsTrigger value="text" className="flex items-center gap-2">
                <FileText className="h-4 w-4" />
                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
              </TabsTrigger>
            </TabsList>

            <TabsContent value="url" className="space-y-4 mt-6">
              <form onSubmit={handleUrlSubmit} className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <BookOpen className="h-4 w-4" />
                      ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠/‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏° *
                    </label>
                    <Input
                      value={urlFormData.title}
                      onChange={(e) => setUrlFormData({ ...urlFormData, title: e.target.value })}
                      placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡∏¥‡∏ó‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢ - ‡∏Å‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏≤‡∏¢"
                      required
                    />
                  </div>

                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <Tag className="h-4 w-4" />
                      ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ *
                    </label>
                    <Select
                      value={urlFormData.category}
                      onValueChange={(value) => setUrlFormData({ ...urlFormData, category: value })}
                      required
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó..." />
                      </SelectTrigger>
                      <SelectContent>
                        {bookCategories.map((category) => (
                          <SelectItem key={category} value={category}>
                            {category}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <Link className="h-4 w-4" />
                      URL ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå *
                    </label>
                    <Input
                      type="url"
                      value={urlFormData.url}
                      onChange={(e) => setUrlFormData({ ...urlFormData, url: e.target.value })}
                      placeholder="https://example.com/article"
                      required
                    />
                  </div>

                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <Globe className="h-4 w-4" />
                      ‡∏†‡∏≤‡∏©‡∏≤‡∏´‡∏•‡∏±‡∏Å *
                    </label>
                    <Select
                      value={urlFormData.language}
                      onValueChange={(value) => setUrlFormData({ ...urlFormData, language: value })}
                      required
                    >
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        {languages.map((lang) => (
                          <SelectItem key={lang.code} value={lang.code}>
                            <div className="flex items-center gap-2">
                              <span>{lang.flag}</span>
                              <span>{lang.name}</span>
                            </div>
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                    <FileText className="h-4 w-4" />
                    ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
                  </label>
                  <Textarea
                    value={urlFormData.description}
                    onChange={(e) => setUrlFormData({ ...urlFormData, description: e.target.value })}
                    placeholder="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠/‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ"
                    className="min-h-[80px] resize-none"
                  />
                </div>

                <Button
                  type="submit"
                  disabled={
                    isSubmitting ||
                    !urlFormData.title.trim() ||
                    !urlFormData.url.trim() ||
                    !urlFormData.category ||
                    !urlFormData.language
                  }
                  className="w-full"
                >
                  {isSubmitting ? (
                    <>
                      <Save className="mr-2 h-4 w-4 animate-spin" />
                      ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°...
                    </>
                  ) : (
                    <>
                      <Plus className="mr-2 h-4 w-4" />
                      ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
                    </>
                  )}
                </Button>
              </form>
            </TabsContent>

            <TabsContent value="text" className="space-y-4 mt-6">
              <form onSubmit={handleTextSubmit} className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <BookOpen className="h-4 w-4" />
                      ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ *
                    </label>
                    <Input
                      value={textFormData.title}
                      onChange={(e) => setTextFormData({ ...textFormData, title: e.target.value })}
                      placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô, ‡∏ö‡∏ó‡∏Å‡∏ß‡∏µ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö"
                      required
                    />
                  </div>

                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <Tag className="h-4 w-4" />
                      ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ *
                    </label>
                    <Select
                      value={textFormData.category}
                      onValueChange={(value) => setTextFormData({ ...textFormData, category: value })}
                      required
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó..." />
                      </SelectTrigger>
                      <SelectContent>
                        {bookCategories.map((category) => (
                          <SelectItem key={category} value={category}>
                            {category}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                    <Globe className="h-4 w-4" />
                    ‡∏†‡∏≤‡∏©‡∏≤‡∏´‡∏•‡∏±‡∏Å *
                  </label>
                  <Select
                    value={textFormData.language}
                    onValueChange={(value) => setTextFormData({ ...textFormData, language: value })}
                    required
                  >
                    <SelectTrigger className="w-full max-w-xs">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {languages.map((lang) => (
                        <SelectItem key={lang.code} value={lang.code}>
                          <div className="flex items-center gap-2">
                            <span>{lang.flag}</span>
                            <span>{lang.name}</span>
                          </div>
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                    <FileText className="h-4 w-4" />
                    ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ *
                  </label>
                  <Textarea
                    value={textFormData.content}
                    onChange={(e) => setTextFormData({ ...textFormData, content: e.target.value })}
                    placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô ‡∏ö‡∏ó‡∏Å‡∏ß‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á..."
                    className="min-h-[200px] resize-none"
                    required
                  />
                  <p className="text-xs text-gray-500">‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß ‡∏ö‡∏ó‡∏Å‡∏ß‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏î‡πÜ ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á</p>
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                    <FileText className="h-4 w-4" />
                    ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
                  </label>
                  <Textarea
                    value={textFormData.description}
                    onChange={(e) => setTextFormData({ ...textFormData, description: e.target.value })}
                    placeholder="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ô‡∏µ‡πâ"
                    className="min-h-[80px] resize-none"
                  />
                </div>

                <Button
                  type="submit"
                  disabled={
                    isSubmitting ||
                    !textFormData.title.trim() ||
                    !textFormData.content.trim() ||
                    !textFormData.category ||
                    !textFormData.language
                  }
                  className="w-full"
                >
                  {isSubmitting ? (
                    <>
                      <Save className="mr-2 h-4 w-4 animate-spin" />
                      ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...
                    </>
                  ) : (
                    <>
                      <Plus className="mr-2 h-4 w-4" />
                      ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                    </>
                  )}
                </Button>
              </form>
            </TabsContent>
          </Tabs>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="text-lg">üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</CardTitle>
        </CardHeader>
        <CardContent className="space-y-3 text-sm text-gray-600">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="space-y-3">
              <h4 className="font-medium text-gray-800">üìö ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå:</h4>
              <div className="space-y-2">
                <div className="flex items-start gap-2">
                  <span className="font-medium">üìñ Wikipedia:</span>
                  <span>‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô</span>
                </div>
                <div className="flex items-start gap-2">
                  <span className="font-medium">üì∞ ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡πà‡∏≤‡∏ß:</span>
                  <span>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô</span>
                </div>
                <div className="flex items-start gap-2">
                  <span className="font-medium">‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î:</span>
                  <span>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 3,000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£</span>
                </div>
              </div>
            </div>
            <div className="space-y-3">
              <h4 className="font-medium text-gray-800">‚úçÔ∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:</h4>
              <div className="space-y-2">
                <div className="flex items-start gap-2">
                  <span className="font-medium">üìù ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô:</span>
                  <span>‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á</span>
                </div>
                <div className="flex items-start gap-2">
                  <span className="font-medium">üé≠ ‡∏ö‡∏ó‡∏Å‡∏ß‡∏µ:</span>
                  <span>‡∏ö‡∏ó‡∏Å‡∏ß‡∏µ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏≠‡∏á</span>
                </div>
                <div className="flex items-start gap-2">
                  <span className="font-medium">üìö ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:</span>
                  <span>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡πà‡∏≤‡∏á‡πÜ</span>
                </div>
              </div>
            </div>
          </div>

          <div className="mt-4 p-3 bg-blue-50 rounded-lg">
            <h4 className="font-medium text-blue-800 mb-2">üè∑Ô∏è ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:</h4>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-2 text-xs">
              {bookCategories.map((category) => (
                <span key={category} className="px-2 py-1 bg-blue-100 text-blue-700 rounded">
                  {category}
                </span>
              ))}
            </div>
          </div>

          <div className="mt-4 p-3 bg-green-50 rounded-lg">
            <h4 className="font-medium text-green-800 mb-2">üåç ‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:</h4>
            <div className="flex flex-wrap gap-2">
              {languages.map((lang) => (
                <span
                  key={lang.code}
                  className="px-2 py-1 bg-green-100 text-green-700 rounded text-xs flex items-center gap-1"
                >
                  <span>{lang.flag}</span>
                  <span>{lang.name}</span>
                </span>
              ))}
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
